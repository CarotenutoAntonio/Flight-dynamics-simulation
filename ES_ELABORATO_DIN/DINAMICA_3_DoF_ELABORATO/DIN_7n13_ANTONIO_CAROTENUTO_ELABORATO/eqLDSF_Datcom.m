function f = eqLDSF_Datcom(t,x) 
% Dichiarazione delle variabili globali 
global ... 
g ... 
delta_e... 
delta_T... 
myAC... 
Adata ...
WBflap ...
v_alpha ...
v_delta_e ...
v_delta_flap ...
v_Mach...
Alpha_M ...
Mach_a ...
Deltae_M ...
Mach_de ...
Deltaf_M ...
Mach_df... 
Alpha_de_M ...
Deltae_a_M ...
Mach_a_de... 
Alpha_df_M ...
Deltaf_a_M ...
Mach_a_df... 
delta_flap 

%Si assegnano i nomi propri alle variabili di stato 

V = x(1); 
alpha = x(2); 
q = x(3); 
x_EG = x(4); 
z_EG = x(5); 
theta = x(6);

%Proprieta % dell â€™aria alla quota attuale 
[air_Temp, sound_speed, air_pressure, rho] = atmosisa(-z_EG); 

%Densita % relativa del velivolo 
mu_rel = (myAC.W/g)/(rho*myAC.S*myAC.b); 

%Il numero di Mach 
M = V/sound_speed; 

%Calcolo dei coefficienti aerodinamici 

[CL, CM, CD] = calcola_CL_CM_CD_ANTONIO_CAROTENUTO(alpha, delta_e(t), delta_flap(t),M);

[Cla, Cma] = calcola_Cmadot_Cladot_ANTONIO_CAROTENUTO(alpha, M); 
[Clq, Cmq] = calcola_CLq_CMq_ANTONIO_CAROTENUTO(M); 

%Riscrittura delle equazioni del moto a comandi bloccati 
f(1) = g.*((delta_T(t)*myAC.T/myAC.W)...
*cos(alpha - myAC.mu_x + myAC.mu_T) ... 
-sin(myAC.mu_x + theta - alpha) ...
-((rho*V^2)/(2*(myAC.W/myAC.S)))*CD); 

f(2) = (( 1. - Clq*(myAC.mac/myAC.b)/(4*mu_rel) )*q ...
-(g/V)*(delta_T(t)*myAC.T/myAC.W)... 
*sin(alpha - myAC.mu_x + myAC.mu_T) ... 
+(g/V)*cos(myAC.mu_x + theta - alpha) ... 
-(g/V)*((rho*V^2)/(2*(myAC.W/myAC.S))) ... 
*CL)...
/( 1. + Cla*(myAC.mac/myAC.b)/(4*mu_rel) ); 

f(3) = (CM + (myAC.mac/(2*V))*Cmq*q ... 
+ myAC.Cm_T_0 + myAC.Cm_T_alpha*alpha... 
+(myAC.mac/(2*V))*Cma*f(2))... 
*((V/myAC.k_y)^2*(myAC.mac/myAC.b)/(2*mu_rel));

f(4) = V*cos(myAC.mu_x + theta - alpha); 

f(5) = -V*sin(myAC.mu_x + theta - alpha);

 f(6) = q; f = f'; 
end